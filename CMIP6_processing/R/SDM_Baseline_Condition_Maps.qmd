---
title: "SDM Baseline Condition Map Review"
author: "Adam Kemberling"
url: "https://github.com/adamkemberling"
affiliation: "Gulf of Maine Research Institute"
affiliation_url: "https://www.gmri.org"
description: | 
  Seasonal Patterns in Sea Surface Temperatures
date: "Updated on: `r Sys.Date()`"
format: 
  html:
    toc: true
    self-contained: true
execute: 
  echo: false
  warning: false
  message: false
  comment: ""
  fig-align: center
  fig-height: 6
  fig-width: 8
---


```{r}
#| label: packages
#| include: false
#| echo: false
#| warning: false

####  Packages  ####
library(lubridate)
library(here)
library(rnaturalearth)
library(scales)
library(sf)
library(gmRi)
library(gt)
library(patchwork)
library(tidyverse)
library(terra) #use terra to save with layer names
library(tidyterra)
library(ncdf4)
library(rcartocolor)



# Box paths
res_path <- cs_path("res")
oisst_path <- cs_path("res", "OISST/oisst_mainstays")
cmip_path  <- cs_path("RES_Data", "CMIP6")
soda_path  <- cs_path("RES_Data", "SODA")

####  Functions  ####
# source(here::here("CMIP6_processing/R/sdm_workflow_funs.R"))


# Polygons for mapping
new_england <- ne_states("united states of america", returnclass = "sf")
canada      <- ne_states("canada", returnclass = "sf")
world_sf    <- ne_countries(returnclass = "sf")
greenland   <- ne_states(country = "greenland", returnclass = "sf")

# set overall zoom for maps
xlimz <- c(-76, -57)
ylimz <- c(35, 48)

```



# Seasonal Baseline Map Comparisons

Do baseline conditions look vastly different on a map? Are there Seasonal Patterns to the error?

Spring = March - May   
Summer = June - August   
August = September - November   
Winter = December - February   


**Question that came up:**   
Should we scale the covariates and SSP scenarios based on their baseline mean/variance rather than the extracted data points mean/variance?

For that we would take a grand mean and variance for the year over our complete study area, and use that to scale with.

Would need mean/variance over the whole area and not by pixel to preserve the north and south patterns. But this would in theory avoid any of the spatial and temporal sampling biases.


### Loading Baseline Period Means

```{r}
# Here is the folder
baseline_avgs <- str_c(res_path, "CMIP6/Bias_Correction_Checking/Baseline_Env_Grids/")

# Just load sst and bot temp and the two scenarios for each
oisst_base <- terra::rast(str_c(baseline_avgs, "OISST_2000to2019_avg.nc"))
oisst_szn_base <-terra::rast(str_c(baseline_avgs, "OISST_2000to2019_seasonal_avg.nc"))


# Reset the extents
# OISST starts at meridian
ext(oisst_base) <- ext(0, 360, -90, 90)
ext(oisst_szn_base) <- terra::ext(0, 360, -90, 90)
oisst_base <- terra::rotate(oisst_base) %>% terra::flip(direction = "vertical")
oisst_szn_base <- terra::rotate(oisst_szn_base) %>% terra::flip(direction = "vertical")

####  SODA  ####
soda_base <- terra::rast(str_c(baseline_avgs, "SODA_2000to2019_avg.nc"))
soda_szn_base <- terra::rast(str_c(baseline_avgs, "SODA_2000to2019_seasonal_avg.nc"))

# SODA was cropped specifically to some different area
# And also needs a vertical flip
soda_ext <- ext(-120, 30, 0, 80)
ext(soda_base) <- soda_ext
ext(soda_szn_base) <- soda_ext
soda_base <- soda_base %>% terra::flip(direction = "vertical")
soda_szn_base <- soda_szn_base %>% terra::flip(direction = "vertical")



####  SSP Baselines  ####
ssp1_base <- terra::rast(str_c(baseline_avgs, "SSP1_26_2000to2019_avg.nc"))
ssp5_base <- terra::rast(str_c(baseline_avgs, "SSP5_85_2000to2019_avg.nc"))
ssp1_szn_base <- terra::rast(str_c(baseline_avgs, "SSP1_26_2000to2019_seasonal_avg.nc"))
ssp5_szn_base <- terra::rast(str_c(baseline_avgs, "SSP5_85_2000to2019_seasonal_avg.nc"))




# SSPs should behave consistent across the different ones:
ssp_ext <- ext(-99.875, -40.125, 20.125, 69.875)
ext(ssp1_base) <- ssp_ext
ext(ssp1_szn_base) <- ssp_ext
ext(ssp5_base) <- ssp_ext
ext(ssp5_szn_base) <- ssp_ext

# Flip and rotate
ssp1_base <- flip(ssp1_base, direction = "vertical")
ssp1_szn_base <- flip(ssp1_szn_base, direction = "vertical")
ssp5_base <- flip(ssp5_base, direction = "vertical")
ssp5_szn_base <- flip(ssp5_szn_base, direction = "vertical")


# # Plotting on same coordinates?
# plot(oisst_base)
# plot(soda_base$bot_sal)
# plot(ssp1_base$bot_temp)


# RESAMPLE
# right now there are diffferent grid resolutions happening that are
# both intentional and accidental
# Should be able to resample to SODA grid once we match up the extents

# Crop everything to SSP Area
soda_base <- soda_base %>% terra::crop(ssp1_base) #%>% plot()
soda_szn_base <- soda_szn_base %>% terra::crop(ssp1_base) #%>% plot()
oisst_base <- oisst_base %>% terra::crop(ssp1_base) #%>% plot()
oisst_szn_base <- oisst_szn_base %>% terra::crop(ssp1_base) #%>% plot()

# # Extents seem fine...
# ext(ssp1_base); ext(ssp5_base); ext(oisst_base); ext(soda_base)

# Resample to a common grid:
oisst_resamp <- terra::resample(oisst_base, soda_base, method = "bilinear") 
oisst_szn_resamp <- terra::resample(oisst_szn_base, soda_base, method = "bilinear") 
ssp1_resamp <- terra::resample(ssp1_base, soda_base, method = "bilinear") 
ssp5_resamp <- terra::resample(ssp5_base, soda_base, method = "bilinear") 
ssp1_szn_resamp <- terra::resample(ssp1_szn_base, soda_base, method = "bilinear") 
ssp5_szn_resamp <- terra::resample(ssp5_szn_base, soda_base, method = "bilinear") 


```


## 2000 to 2019 In-Situ Average Conditions

::: {.panel-tabset}

## Surface Temperature

```{r}

ggplot() +
  geom_spatraster(data = oisst_resamp) +
  geom_sf(data = new_england, size = 0.3) +
  geom_sf(data = canada, size = 0.3) +
  geom_sf(data = greenland, size = 0.3) +
  scale_fill_carto_c(palette = "BluYl", limits = c(0, 25), oob = oob_squish, direction = -1, na.value = "transparent") +
  theme_bw() +
  map_theme(legend.position = "bottom") +
  guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(3, "in"))) +
  coord_sf(xlim = xlimz, ylim = ylimz) +
  labs(color = "", fill = "2000-2019 OISST Average SST", title = "OISSTv2 2000-2019 Average SST") 
```

## Bottom Temperature

```{r}
ggplot() +
  geom_spatraster(data = soda_base$bot_temp) +
  geom_sf(data = new_england, size = 0.3) +
  geom_sf(data = canada, size = 0.3) +
  geom_sf(data = greenland, size = 0.3) +
  scale_fill_carto_c(palette = "BluYl", limits = c(0, 25), oob = oob_squish, direction = -1, na.value = "transparent") +
  theme_bw() +
  map_theme(legend.position = "bottom") +
  guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(3, "in"))) +
  coord_sf(xlim = xlimz, ylim = ylimz) +
  labs(color = "", fill = "2000-2019 SODA Average BT", title = "SODA 2000-2019 Average BT") 
```

:::


## 2000 to 2019 SSP Bias-Corrected Baselines

::: {.panel-tabset}

## Surface Temperature

```{r}
p1 <- ggplot() +
  geom_spatraster(data = ssp1_resamp$surf_temp) +
  geom_sf(data = new_england, size = 0.3) +
  geom_sf(data = canada, size = 0.3) +
  geom_sf(data = greenland, size = 0.3) +
  scale_fill_carto_c(palette = "BluYl", limits = c(0, 25), 
                     direction = -1, na.value = "transparent") +
  theme_bw() +
  map_theme(legend.position = "bottom") +
  guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(3, "in"))) +
  coord_sf(xlim = xlimz, ylim = ylimz) +
  labs(color = "", fill = "2000-2019 SSP1: 2.6 Average SST", title = "SSP1: 2.6 2000-2019 Average SST") 

p2 <- ggplot() +
  geom_spatraster(data = ssp5_resamp$surf_temp) +
  geom_sf(data = new_england, size = 0.3) +
  geom_sf(data = canada, size = 0.3) +
  geom_sf(data = greenland, size = 0.3) +
  scale_fill_carto_c(palette = "BluYl", limits = c(0, 25), direction = -1, na.value = "transparent") +
  theme_bw() +
  map_theme(legend.position = "bottom") +
  guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(3, "in"))) +
  coord_sf(xlim = xlimz, ylim = ylimz) +
  labs(color = "", fill = "2000-2019 SSP5: 8.5 Average SST", title = "SSP5: 8.5 2000-2019 Average SST") 

p1 | p2

```

## Bottom Temperature

```{r}
p1 <- ggplot() +
  geom_spatraster(data = ssp1_resamp$bot_temp) +
  geom_sf(data = new_england, size = 0.3) +
  geom_sf(data = canada, size = 0.3) +
  geom_sf(data = greenland, size = 0.3) +
  scale_fill_carto_c(palette = "BluYl", limits = c(0, 25), direction = -1, na.value = "transparent") +
  theme_bw() +
  map_theme(legend.position = "bottom") +
  guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(3, "in"))) +
  coord_sf(xlim = xlimz, ylim = ylimz) +
  labs(color = "", fill = "2000-2019 SSP1: 2.6 Average BT", title = "SSP1: 2.6 2000-2019 Average BT") 

p2 <- ggplot() +
  geom_spatraster(data = ssp5_resamp$bot_temp) +
  geom_sf(data = new_england, size = 0.3) +
  geom_sf(data = canada, size = 0.3) +
  geom_sf(data = greenland, size = 0.3) +
  scale_fill_carto_c(palette = "BluYl", limits = c(0, 25), direction = -1, na.value = "transparent") +
  theme_bw() +
  map_theme(legend.position = "bottom") +
  guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(3, "in"))) +
  coord_sf(xlim = xlimz, ylim = ylimz) +
  labs(color = "", fill = "2000-2019 SSP5: 8.5 Average BT", title = "SSP5: 8.5 2000-2019 Average BT") 

p1 | p2
```


:::


# Raw Values - Difference from Observed Baselines



```{r}
# Plotting function to make sure typos don't pop up from all the copy and pasting
plot_unscaled_differences <- function(var = "surf_temp", season_var = "Spring"){
  
  # Set up how the input arrays and their layers will be subset to make plots and labels
  obs_name <- ifelse(var == "surf_temp", "OISSTv2", "SODA")
  if(var == "surf_temp"){obs_dataset <- oisst_szn_resamp}
  if(var == "bot_temp"){obs_dataset <- soda_szn_base}

  obs_layer_name <- ifelse(var == "surf_temp", "OISST_2000to2019_seasonal_avg_", str_c(var, "_"))
  obs_layer_num <- c("Spring" = 3, "Summer" = 2, "Fall" = 4, "Winter" = 1)
  obs_layer_name <- str_c(obs_layer_name, obs_layer_num[[season_var]])
  #return(obs_dataset)
  
  # Set up how the SSP scenario layers are grabbed
  ssp_layer_name <- str_c(var, "_", obs_layer_num[[season_var]])
  
  # Labels
  obs_fill <- str_c("Observed", season_var, " Temp.")
  obs_title <- str_c(obs_name," 2000-2019 ", season_var, " Average")
  s1_fill <- str_c("SSP1: 2.6 ", season_var, " - ", obs_name)
  s5_fill <- str_c("SSP5: 8.5 ", season_var, " - ", obs_name)
  s1_title <- str_c("SSP1: 2.6 ", season_var, " Baseline Bias")
  s5_title <- str_c("SSP5: 8.5 ", season_var, " Baseline Bias")
  
  # # Map of baseline averages
  # baseline_obs_map <- ggplot() +
  #   geom_spatraster(data = obs_dataset[[obs_layer_name]]) +
  #   geom_sf(data = new_england, size = 0.3) +
  #   geom_sf(data = canada, size = 0.3) +
  #   geom_sf(data = greenland, size = 0.3) +
  #   scale_fill_carto_c(palette = "BluYl", limits = c(0, 25), direction = -1, na.value = "transparent") +
  #   theme_bw() +
  #   map_theme(legend.position = "bottom", plot.margin = margin(0, 0, 0, 0)) +
  #   guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(3, "in"))) +
  #   coord_sf(xlim = xlimz, ylim = ylimz) +
  #   labs(color = "", 
  #        fill = obs_fill, 
  #        title = obs_title) 


  # Map of SSP1 differences
  ssp1_diff <- ggplot() +
    geom_spatraster(data = ssp1_szn_resamp[[ssp_layer_name]] - obs_dataset[[obs_layer_name]]) +
    geom_sf(data = new_england, size = 0.3) +
    geom_sf(data = canada, size = 0.3) +
    geom_sf(data = greenland, size = 0.3) +
    scale_fill_distiller(palette = "RdBu", limits = c(-1.5, 1.5), direction = -1, na.value = "transparent") +
    theme_bw() +
    map_theme(legend.position = "bottom", plot.margin = margin(0, 0, 0, 0)) +
    guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(3, "in"))) +
    coord_sf(xlim = xlimz, ylim = ylimz) +
    labs(color = "", 
         fill = s1_fill, 
         title = s1_title) 

  ssp5_diff <- ggplot() +
    geom_spatraster(data = ssp5_szn_resamp[[ssp_layer_name]] - obs_dataset[[obs_layer_name]]) +
    geom_sf(data = new_england, size = 0.3) +
    geom_sf(data = canada, size = 0.3) +
    geom_sf(data = greenland, size = 0.3) +
    scale_fill_distiller(palette = "RdBu", limits = c(-1.5, 1.5), direction = -1, na.value = "transparent") +
    theme_bw() +
    map_theme(legend.position = "bottom", plot.margin = margin(0, 0, 0, 0)) +
    guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(3, "in"))) +
    coord_sf(xlim = xlimz, ylim = ylimz) +
    labs(color = "", 
         fill = s5_fill, 
         title = s5_title) 


  #out_stack <- baseline_obs_map/ssp1_diff/ssp5_diff
  out_stack <- ssp1_diff |ssp5_diff
  return(out_stack)
  
  
}
```



::: {.panel-tabset}

## Annual

::: {.panel-tabset}

### Surface Temperature


```{r}
p1 <- ggplot() +
  geom_spatraster(data = ssp1_resamp$surf_temp - oisst_resamp$OISST_2000to2019_avg) +
  geom_sf(data = new_england, size = 0.3) +
  geom_sf(data = canada, size = 0.3) +
  geom_sf(data = greenland, size = 0.3) +
  scale_fill_distiller(palette = "RdBu", limits = c(-1.5, 1.5), direction = -1, na.value = "transparent") +
  theme_bw() +
  map_theme(legend.position = "bottom", plot.margin = margin(0, 0, 0, 0)) +
  guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(3, "in"))) +
  coord_sf(xlim = xlimz, ylim = ylimz) +
  labs(color = "", fill = "SSP1: 2.6 8.5 Surface Temp. - OISST Surface Temp.", title = "SSP1: 2.6 Baseline Bias") 

p2 <- ggplot() +
  geom_spatraster(data = ssp5_resamp$surf_temp - oisst_resamp$OISST_2000to2019_avg) +
  geom_sf(data = new_england, size = 0.3) +
  geom_sf(data = canada, size = 0.3) +
  geom_sf(data = greenland, size = 0.3) +
  scale_fill_distiller(palette = "RdBu", limits = c(-1.5, 1.5), direction = -1, na.value = "transparent") +
  theme_bw() +
  map_theme(legend.position = "bottom", plot.margin = margin(0, 0, 0, 0)) +
  guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(3, "in"))) +
  coord_sf(xlim = xlimz, ylim = ylimz) +
  labs(color = "", fill = "SSP5: 8.5 Surface Temp. - OISST Surface Temp.", title = "SSP5: 8.5 Baseline Bias") 


p1 | p2
```


### Bottom Temperature
```{r}
p1 <- ggplot() +
  geom_spatraster(data = ssp1_resamp$bot_temp - soda_base$bot_temp) +
  geom_sf(data = new_england, size = 0.3) +
  geom_sf(data = canada, size = 0.3) +
  geom_sf(data = greenland, size = 0.3) +
  scale_fill_distiller(palette = "RdBu", limits = c(-1.5, 1.5), direction = -1, na.value = "transparent") +
  theme_bw() +
  map_theme(legend.position = "bottom") +
  guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(3, "in"))) +
  coord_sf(xlim = xlimz, ylim = ylimz) +
  labs(color = "", fill = "SSP1: 2.6 Bottom Temp. - SODA Bottom Temp.", title = "SSP1: 2.6 Baseline Bias") 

p2 <- ggplot() +
  geom_spatraster(data = ssp5_resamp$bot_temp - soda_base$bot_temp) +
  geom_sf(data = new_england, size = 0.3) +
  geom_sf(data = canada, size = 0.3) +
  geom_sf(data = greenland, size = 0.3) +
  scale_fill_distiller(palette = "RdBu", limits = c(-1.5, 1.5), direction = -1, na.value = "transparent") +
  theme_bw() +
  map_theme(legend.position = "bottom") +
  guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(3, "in"))) +
  coord_sf(xlim = xlimz, ylim = ylimz) +
  labs(color = "", fill = "SSP5: 8.5 Bottom Temp. - SODA Bottom Temp.", title = "SSP5: 8.5 Baseline Bias") 


p1 | p2
```


:::

## Spring

::: {.panel-tabset}

### Surface Temperature




```{r}

plot_unscaled_differences("surf_temp", "Spring")
```


### Bottom Temperature
```{r}

plot_unscaled_differences("bot_temp", "Spring")
```


:::




## Summer

::: {.panel-tabset}

### Surface Temperature


```{r}

plot_unscaled_differences("surf_temp", "Summer")
```


### Bottom Temperature

```{r}

plot_unscaled_differences("bot_temp", "Summer")
```

:::

## Fall

::: {.panel-tabset}

### Surface Temperature


```{r}

plot_unscaled_differences("surf_temp", "Fall")
```

### Bottom Temperature

```{r}

plot_unscaled_differences("bot_temp", "Fall")
```

:::

## Winter


::: {.panel-tabset}

### Surface Temperature


```{r}

plot_unscaled_differences("surf_temp", "Winter")
```


### Bottom Temperature

```{r}

plot_unscaled_differences("bot_temp", "Winter")
```

:::


:::




# Re-Scaled Value Maps

Before outputs from the SDM models can be applied to the projected landscapes, the environmental covariates need to be re-scaled to match how the model is fit. The following maps have been re-scaled using the grand mean and variance from the dataset used to fit the SDM model. These maps should still reflect the North/South spatial patterns of the raw data, but with units that have been centered and scaled.

> @Adam Kemberling is going to work on maps of the fitted/projected covariates on the “scaled” scale. For those, the grand mean/SD for SST are: 11.1/4.5 and then BT are: 7/2.7. These will give us some idea of what the spatial patterns are with the “scaled” covariates. Ideally, we see patterns that are similar to the SST/BT patterns on the raw scale rather than just a somewhat random map with patches of positive/negative values.


#### These Are the Units the Model Sees When it Goes to Project

```{r}
sst_gmean <- 11.1
sst_gsd <- 4.5
bt_gmean <- 7
bt_gsd <- 2.7

# Rescale OISST
oisst_szn_rescale <- (oisst_szn_resamp - sst_gmean) / sst_gsd
oisst_rescale <- (oisst_resamp - sst_gmean) / sst_gsd

# Rescale SODA BT
soda_rescale <- (soda_base$bot_temp - bt_gmean) / bt_gsd
soda_szn_rescale <- (soda_szn_base$bot_temp_1 - bt_gmean) / bt_gsd
soda_szn_rescale$bot_temp_2 <- (soda_szn_base$bot_temp_2 - bt_gmean) / bt_gsd
soda_szn_rescale$bot_temp_3 <- (soda_szn_base$bot_temp_3 - bt_gmean) / bt_gsd
soda_szn_rescale$bot_temp_4 <- (soda_szn_base$bot_temp_4 - bt_gmean) / bt_gsd

# Rescale SSP1
ssp1_rescale <- (ssp1_resamp$bot_temp - bt_gmean) / bt_gsd
ssp1_rescale$surf_temp <- (ssp1_resamp$surf_temp - sst_gmean) / sst_gsd
ssp1_szn_rescale <- (ssp1_szn_resamp$bot_temp_1 - bt_gmean) / bt_gsd
ssp1_szn_rescale$bot_temp_2 <- (ssp1_szn_resamp$bot_temp_2 - bt_gmean) / bt_gsd
ssp1_szn_rescale$bot_temp_3 <- (ssp1_szn_resamp$bot_temp_3 - bt_gmean) / bt_gsd
ssp1_szn_rescale$bot_temp_4 <- (ssp1_szn_resamp$bot_temp_4 - bt_gmean) / bt_gsd
ssp1_szn_rescale$surf_temp_1 <- (ssp1_szn_resamp$surf_temp_1 - sst_gmean) / sst_gsd
ssp1_szn_rescale$surf_temp_2 <- (ssp1_szn_resamp$surf_temp_2 - sst_gmean) / sst_gsd
ssp1_szn_rescale$surf_temp_3 <- (ssp1_szn_resamp$surf_temp_3 - sst_gmean) / sst_gsd
ssp1_szn_rescale$surf_temp_4 <- (ssp1_szn_resamp$surf_temp_4 - sst_gmean) / sst_gsd

# Rescale SSP2
ssp5_rescale <- (ssp5_resamp$bot_temp - bt_gmean) / bt_gsd
ssp5_rescale$surf_temp <- (ssp5_resamp$surf_temp - sst_gmean) / sst_gsd
ssp5_szn_rescale <- (ssp5_szn_resamp$bot_temp_1 - bt_gmean) / bt_gsd
ssp5_szn_rescale$bot_temp_2 <- (ssp5_szn_resamp$bot_temp_2 - bt_gmean) / bt_gsd
ssp5_szn_rescale$bot_temp_3 <- (ssp5_szn_resamp$bot_temp_3 - bt_gmean) / bt_gsd
ssp5_szn_rescale$bot_temp_4 <- (ssp5_szn_resamp$bot_temp_4 - bt_gmean) / bt_gsd
ssp5_szn_rescale$surf_temp_1 <- (ssp5_szn_resamp$surf_temp_1 - sst_gmean) / sst_gsd
ssp5_szn_rescale$surf_temp_2 <- (ssp5_szn_resamp$surf_temp_2 - sst_gmean) / sst_gsd
ssp5_szn_rescale$surf_temp_3 <- (ssp5_szn_resamp$surf_temp_3 - sst_gmean) / sst_gsd
ssp5_szn_rescale$surf_temp_4 <- (ssp5_szn_resamp$surf_temp_4 - sst_gmean) / sst_gsd
```



```{r}
# Plotting function to make sure typos don't pop up from all the copy and pasting
plot_scaled_differences <- function(var = "surf_temp", season_var = "Spring"){
  
  # Set up how the input arrays and their layers will be subset to make plots and labels
  obs_name <- ifelse(var == "surf_temp", "OISSTv2", "SODA")
  if(var == "surf_temp"){obs_dataset <- oisst_szn_rescale}
  if(var == "bot_temp"){obs_dataset <- soda_szn_rescale}

  obs_layer_name <- ifelse(var == "surf_temp", "OISST_2000to2019_seasonal_avg_", str_c(var, "_"))
  obs_layer_num <- c("Spring" = 3, "Summer" = 2, "Fall" = 4, "Winter" = 1)
  obs_layer_name <- str_c(obs_layer_name, obs_layer_num[[season_var]])
  #return(obs_dataset)
  
  # Set up how the SSP scenario layers are grabbed
  ssp_layer_name <- str_c(var, "_", obs_layer_num[[season_var]])
  
  # Labels
  obs_fill <- str_c("Rescaled", season_var, " Temp.")
  obs_title <- str_c(obs_name," 2000-2019 ", season_var, " Rescaled")
  s1_fill <- str_c("SSP1: 2.6 ", season_var, " - Center & Scale")
  s5_fill <- str_c("SSP5: 8.5 ", season_var, " - Center & Scale")
  s1_title <- str_c("SSP1: 2.6 ", season_var, " Rescaled Values")
  s5_title <- str_c("SSP5: 8.5 ", season_var, " Rescaled Values")
  
  # # Map of baseline averages
  # baseline_obs_map <- ggplot() +
  #   geom_spatraster(data = obs_dataset[[obs_layer_name]]) +
  #   geom_sf(data = new_england, size = 0.3) +
  #   geom_sf(data = canada, size = 0.3) +
  #   geom_sf(data = greenland, size = 0.3) +
  #   scale_fill_distiller(palette = "RdBu", limits = c(-3, 3), direction = -1, na.value = "transparent") +
  #   theme_bw() +
  #   map_theme(legend.position = "bottom", plot.margin = margin(0, 0, 0, 0)) +
  #   guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(3, "in"))) +
  #   coord_sf(xlim = xlimz, ylim = ylimz) +
  #   labs(color = "", 
  #        fill = obs_fill, 
  #        title = obs_title) 
  

  # Map of SSP1 differences
  ssp1_diff <- ggplot() +
    # geom_spatraster(data = ssp1_szn_rescale[[ssp_layer_name]] - obs_dataset[[obs_layer_name]]) +
    geom_spatraster(data = ssp1_szn_rescale[[ssp_layer_name]]) +
    geom_sf(data = new_england, size = 0.3) +
    geom_sf(data = canada, size = 0.3) +
    geom_sf(data = greenland, size = 0.3) +
    scale_fill_distiller(palette = "RdBu", limits = c(-3, 3), direction = -1, na.value = "transparent", oob = oob_squish) +
    # scale_fill_distiller(palette = "RdBu", limits = c(-.75, .75), direction = -1, na.value = "transparent") +
    theme_bw() +
    map_theme(legend.position = "bottom", plot.margin = margin(0, 0, 0, 0)) +
    guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(3, "in"))) +
    coord_sf(xlim = xlimz, ylim = ylimz) +
    labs(color = "", 
         fill = s1_fill, 
         title = s1_title) 

  ssp5_diff <- ggplot() +
    #geom_spatraster(data = ssp5_szn_rescale[[ssp_layer_name]] - obs_dataset[[obs_layer_name]]) +
    geom_spatraster(data = ssp5_szn_rescale[[ssp_layer_name]]) +
    geom_sf(data = new_england, size = 0.3) +
    geom_sf(data = canada, size = 0.3) +
    geom_sf(data = greenland, size = 0.3) +
    scale_fill_distiller(palette = "RdBu", limits = c(-3, 3), direction = -1, na.value = "transparent", oob = oob_squish) +
    # scale_fill_distiller(palette = "RdBu", limits = c(-.75, .75), direction = -1, na.value = "transparent") +
    theme_bw() +
    map_theme(legend.position = "bottom", plot.margin = margin(0, 0, 0, 0)) +
    guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(3, "in"))) +
    coord_sf(xlim = xlimz, ylim = ylimz) +
    labs(color = "", 
         fill = s5_fill, 
         title = s5_title) 


  #out_stack <- baseline_obs_map/ssp1_diff/ssp5_diff
  out_stack <- ssp1_diff |ssp5_diff
  return(out_stack)
  
  
}
```

::: {.panel-tabset}

## Annual



::: {.panel-tabset}

### Surface Temperature



```{r}
p1 <- ggplot() +
  geom_spatraster(data = ssp1_rescale$surf_temp) +
  geom_sf(data = new_england, size = 0.3) +
  geom_sf(data = canada, size = 0.3) +
  geom_sf(data = greenland, size = 0.3) +
  scale_fill_distiller(palette = "RdBu", limits = c(-3, 3), direction = -1, na.value = "transparent", oob = oob_squish) +
    theme_bw() +
  map_theme(legend.position = "bottom", plot.margin = margin(0, 0, 0, 0)) +
  guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(3, "in"))) +
  coord_sf(xlim = xlimz, ylim = ylimz) +
  labs(color = "", fill = "SSP1: 2.6 8.5 Surface Temp. - Center & Scale", title = "SSP1: 2.6 Rescaled Values") 

p2 <- ggplot() +
  geom_spatraster(data = ssp5_rescale$surf_temp) +
  geom_sf(data = new_england, size = 0.3) +
  geom_sf(data = canada, size = 0.3) +
  geom_sf(data = greenland, size = 0.3) +
  scale_fill_distiller(palette = "RdBu", limits = c(-3, 3), direction = -1, na.value = "transparent", oob = oob_squish) +
    theme_bw() +
  map_theme(legend.position = "bottom", plot.margin = margin(0, 0, 0, 0)) +
  guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(3, "in"))) +
  coord_sf(xlim = xlimz, ylim = ylimz) +
  labs(color = "", fill = "SSP5: 8.5 Surface Temp. - Center & Scale", title = "SSP5: 8.5 Rescaled Values") 


p1 | p2
```


### Bottom Temperature
```{r}
p1 <- ggplot() +
  geom_spatraster(data = ssp1_rescale$bot_temp) +
  geom_sf(data = new_england, size = 0.3) +
  geom_sf(data = canada, size = 0.3) +
  geom_sf(data = greenland, size = 0.3) +
  scale_fill_distiller(palette = "RdBu", limits = c(-3, 3), direction = -1, na.value = "transparent") +
  theme_bw() +
  map_theme(legend.position = "bottom") +
  guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(3, "in"))) +
  coord_sf(xlim = xlimz, ylim = ylimz) +
  labs(color = "", fill = "SSP1: 2.6 Bottom Temp. - Center & Scale", title = "SSP1: 2.6 Rescaled Values") 

p2 <- ggplot() +
  geom_spatraster(data = ssp5_rescale$bot_temp) +
  geom_sf(data = new_england, size = 0.3) +
  geom_sf(data = canada, size = 0.3) +
  geom_sf(data = greenland, size = 0.3) +
  scale_fill_distiller(palette = "RdBu", limits = c(-3, 3), direction = -1, na.value = "transparent") +
  theme_bw() +
  map_theme(legend.position = "bottom") +
  guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(3, "in"))) +
  coord_sf(xlim = xlimz, ylim = ylimz) +
  labs(color = "", fill = "SSP5: 8.5 Bottom Temp. - Center & Scale", title = "SSP5: 8.5 Rescaled Values") 


p1 | p2
```


:::



## Spring

::: {.panel-tabset}

### Surface Temperature




```{r}

plot_scaled_differences("surf_temp", "Spring")
```


### Bottom Temperature
```{r}

plot_scaled_differences("bot_temp", "Spring")
```


:::




## Summer

::: {.panel-tabset}

### Surface Temperature


```{r}

plot_scaled_differences("surf_temp", "Summer")
```


### Bottom Temperature

```{r}

plot_scaled_differences("bot_temp", "Summer")
```

:::

## Fall

::: {.panel-tabset}

### Surface Temperature


```{r}

plot_scaled_differences("surf_temp", "Fall")
```

### Bottom Temperature

```{r}

plot_scaled_differences("bot_temp", "Fall")
```

:::

## Winter


::: {.panel-tabset}

### Surface Temperature


```{r}

plot_scaled_differences("surf_temp", "Winter")
```


### Bottom Temperature

```{r}

plot_scaled_differences("bot_temp", "Winter")
```

:::


:::